# This is a basic workflow to help you get started with Actions

name: .NET Core

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.403
          
      - name: Install dependencies
        run: dotnet restore
      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      # Runs a single command using the runners shell
      - name: Run an app
        run: dotnet run --project TetrisOptimization

      # Runs unit tests
      - name: Run unit tests
        run: |
          dotnet test --no-restore --collect "XPlat Code Coverage" --results-directory ./TestResults
          cd ./TestResults
          bash -c 'x=1; for f in ./*/*.xml; do mv "$f" "./coverage${x}.xml"; ((x++)); done'
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./TestResults/
          flags: unittests
